from flask import Flask, request, jsonify, abort, request
from app import app
from app.models import MalwareData
from app import app, db

@app.route('/')
def index():
    return 'Welcome to Malware Checker'
    
    
@app.route('/urlinfo/1/<path:hostname_port>/', defaults={'urlpath': ''}, methods=['GET'])
@app.route('/urlinfo/1/<path:hostname_port>/<path:urlpath>', methods=['GET'])
def url_checker(hostname_port, urlpath):
    domain_and_port = hostname_port
    
    #Values parsed already by Werkzeug, so no need to use urlparse
    query_string    = request.query_string
    
    app.logger.info(domain_and_port)
    app.logger.info(urlpath)

    #Need to validate if port is present before splitting
    if ':' in domain_and_port:
        urlparts = domain_and_port.split(':')
        hostname = urlparts[0]
        port     = urlparts[1]
    else:
        hostname = domain_and_port
        #Since port 80 is the default http port, we set is as the default
        port     = 80

    url_data = MalwareData.query.filter_by(id=1).first()
    if not url_data:
        res = {
            'status': 204,
            'message': 'Data not present in our database',
            'domain': url_data.domain,
            'port': url_data.port,
        }
        abort(404)

    true_list = ['True', 'true', 1]
    if url_data.is_malicious in true_list:
        res = {
            'status': 200,
            'message': 'Harmful Url. Not recommended to visit',
            'url_type': url_data.category,
            'domain': url_data.domain,
            'port': url_data.port,
            'is_malicious': url_data.is_malicious,
        }
    else:
        message = 'Url is safe to browse.'
        status_code = 204
        res = {
            'status': status_code,
            'message': message,
            'domain': url_data.domain,
            'port': url_data.port,
            'is_malicious': url_data.is_malicious,
        }
    return jsonify(res)